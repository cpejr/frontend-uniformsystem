[{"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/index.js":"1","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/contexts/LoginContext.js":"2","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/routes.js":"3","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/services/api.js":"4","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Perfil/index.js":"5","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Loja/index.js":"6","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Checkout/index.js":"7","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/HomeEditable/index.js":"8","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/EspecificOrderAdm/index.js":"9","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/RegisterProduct/index.js":"10","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/index.js":"11","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Footer/index.js":"12","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/index.js":"13","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SidebarAdm/index.js":"14","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Produto/Produto.js":"15","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Loja/Loja.js":"16","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Contato/Contato.js":"17","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/EspecificOrderAdm/EspecificOrderAdm.js":"18","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/EmployeeAdm.js":"19","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/HomeEditable/HomeEditable.js":"20","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/CadastroFunc/CadastroFunc.js":"21","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/Mobile_HeaderAdm/MobileHeaderAdm.js":"22","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/meta/reactHelmet.js":"23","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/ProductSkeleton.js":"24","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/DadosPessoais/DadosPessoais.js":"25","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Carrinho/Components/CartProduct.js":"26","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/CardPedido/index.js":"27","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Components/DropDownLoginContent.js":"28","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/CartHeaderSkeleton.js":"29","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Enderecos/Enderecos.js":"30","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpProductModel/index.js":"31","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpProductModel/PopUpProductModel.js":"32","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/App.js":"33","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Contato/index.js":"34","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/EditarPerfil/index.js":"35","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Login/index.js":"36","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/index.js":"37","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/EspecificEmployee/index.js":"38","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/FooterAdm/index.js":"39","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Home/Home.js":"40","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Perfil/Perfil.js":"41","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/EditarPerfil/EditarPerfil.js":"42","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/RegisterProduct/RegisterProduct.js":"43","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SidebarAdm/SidebarAdm.js":"44","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Computer_Header/Header.js":"45","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/MobileShopSkeleton.js":"46","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpChangeAddress/index.js":"47","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SnackbarMessage/index.js":"48","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Enderecos/index.js":"49","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpChangeAddress/PopUpChangeAddress.js":"50","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/TabelaFuncionario/TabelaFuncionario.js":"51","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCardAdm/index.js":"52","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCardAdm/ProductCardAdm.js":"53","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/ShopSkeleton.js":"54","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCard/index.js":"55","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Home/index.js":"56","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Produto/index.js":"57","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Error/index.js":"58","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/index.js":"59","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/index.js":"60","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Carrinho/Carrinho.js":"61","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Cadastro/Cadastro.js":"62","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/OrdersAdm.js":"63","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/Computer_HeaderAdm/HeaderAdm.js":"64","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ExcludeDialog/ExcludeDialog.js":"65","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Components/DropDownCartContent.js":"66","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/OrderTable/OrderTable.js":"67","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Toggle/Toggle.js":"68","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCard/ProductCard.js":"69"},{"size":444,"mtime":1614296333381,"results":"70","hashOfConfig":"71"},{"size":1792,"mtime":1614296333381,"results":"72","hashOfConfig":"71"},{"size":9563,"mtime":1614296333381,"results":"73","hashOfConfig":"71"},{"size":346,"mtime":1614296333381,"results":"74","hashOfConfig":"71"},{"size":32,"mtime":1614296333378,"results":"75","hashOfConfig":"71"},{"size":30,"mtime":1614296333378,"results":"76","hashOfConfig":"71"},{"size":41,"mtime":1614296333375,"results":"77","hashOfConfig":"71"},{"size":38,"mtime":1614296333371,"results":"78","hashOfConfig":"71"},{"size":43,"mtime":1614296333371,"results":"79","hashOfConfig":"71"},{"size":41,"mtime":1614296333375,"results":"80","hashOfConfig":"71"},{"size":820,"mtime":1614296333378,"results":"81","hashOfConfig":"71"},{"size":32,"mtime":1614296333378,"results":"82","hashOfConfig":"71"},{"size":850,"mtime":1614296333381,"results":"83","hashOfConfig":"71"},{"size":36,"mtime":1614296333381,"results":"84","hashOfConfig":"71"},{"size":13852,"mtime":1614296333378,"results":"85","hashOfConfig":"71"},{"size":9049,"mtime":1614351963928,"results":"86","hashOfConfig":"71"},{"size":5591,"mtime":1614296333375,"results":"87","hashOfConfig":"71"},{"size":8743,"mtime":1614296333371,"results":"88","hashOfConfig":"71"},{"size":6184,"mtime":1614296333371,"results":"89","hashOfConfig":"71"},{"size":38947,"mtime":1614296333371,"results":"90","hashOfConfig":"71"},{"size":9475,"mtime":1614296333371,"results":"91","hashOfConfig":"71"},{"size":1728,"mtime":1614296333381,"results":"92","hashOfConfig":"71"},{"size":848,"mtime":1614296333381,"results":"93","hashOfConfig":"71"},{"size":2655,"mtime":1614296333381,"results":"94","hashOfConfig":"71"},{"size":562,"mtime":1614296333378,"results":"95","hashOfConfig":"71"},{"size":1838,"mtime":1614296333375,"results":"96","hashOfConfig":"71"},{"size":38,"mtime":1614296333378,"results":"97","hashOfConfig":"71"},{"size":7652,"mtime":1614296333378,"results":"98","hashOfConfig":"71"},{"size":895,"mtime":1614296333381,"results":"99","hashOfConfig":"71"},{"size":883,"mtime":1614296333378,"results":"100","hashOfConfig":"71"},{"size":43,"mtime":1614296333381,"results":"101","hashOfConfig":"71"},{"size":12771,"mtime":1614296333381,"results":"102","hashOfConfig":"71"},{"size":314,"mtime":1614296333368,"results":"103","hashOfConfig":"71"},{"size":33,"mtime":1614296333375,"results":"104","hashOfConfig":"71"},{"size":38,"mtime":1614296333375,"results":"105","hashOfConfig":"71"},{"size":31,"mtime":1614296333378,"results":"106","hashOfConfig":"71"},{"size":35,"mtime":1614296333371,"results":"107","hashOfConfig":"71"},{"size":43,"mtime":1614296333371,"results":"108","hashOfConfig":"71"},{"size":35,"mtime":1614296333378,"results":"109","hashOfConfig":"71"},{"size":6478,"mtime":1614296333375,"results":"110","hashOfConfig":"71"},{"size":5413,"mtime":1614296333378,"results":"111","hashOfConfig":"71"},{"size":20250,"mtime":1614296333375,"results":"112","hashOfConfig":"71"},{"size":15803,"mtime":1614296333375,"results":"113","hashOfConfig":"71"},{"size":5270,"mtime":1614355421936,"results":"114","hashOfConfig":"71"},{"size":4440,"mtime":1614296333378,"results":"115","hashOfConfig":"71"},{"size":733,"mtime":1614296333381,"results":"116","hashOfConfig":"71"},{"size":44,"mtime":1614296333381,"results":"117","hashOfConfig":"71"},{"size":45,"mtime":1614296333381,"results":"118","hashOfConfig":"71"},{"size":37,"mtime":1614296333378,"results":"119","hashOfConfig":"71"},{"size":13742,"mtime":1614296333381,"results":"120","hashOfConfig":"71"},{"size":1096,"mtime":1614296333381,"results":"121","hashOfConfig":"71"},{"size":40,"mtime":1614296333381,"results":"122","hashOfConfig":"71"},{"size":1065,"mtime":1614296333381,"results":"123","hashOfConfig":"71"},{"size":2129,"mtime":1614349248246,"results":"124","hashOfConfig":"71"},{"size":37,"mtime":1614296333381,"results":"125","hashOfConfig":"71"},{"size":30,"mtime":1614296333375,"results":"126","hashOfConfig":"71"},{"size":33,"mtime":1614296333378,"results":"127","hashOfConfig":"71"},{"size":35,"mtime":1614296333375,"results":"128","hashOfConfig":"71"},{"size":37,"mtime":1614296333375,"results":"129","hashOfConfig":"71"},{"size":37,"mtime":1614296333371,"results":"130","hashOfConfig":"71"},{"size":4464,"mtime":1614296333375,"results":"131","hashOfConfig":"71"},{"size":27144,"mtime":1614300473942,"results":"132","hashOfConfig":"71"},{"size":6006,"mtime":1614296333371,"results":"133","hashOfConfig":"71"},{"size":1717,"mtime":1614296333378,"results":"134","hashOfConfig":"71"},{"size":708,"mtime":1614296333378,"results":"135","hashOfConfig":"71"},{"size":4456,"mtime":1614296333378,"results":"136","hashOfConfig":"71"},{"size":1275,"mtime":1614296333381,"results":"137","hashOfConfig":"71"},{"size":579,"mtime":1614296333381,"results":"138","hashOfConfig":"71"},{"size":1115,"mtime":1614296333381,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7fw54h",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"151"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"148"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"148"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/contexts/LoginContext.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/routes.js",["284"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/services/api.js",[],["285","286"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Perfil/index.js",[],["287","288"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Loja/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Checkout/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/HomeEditable/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/EspecificOrderAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/RegisterProduct/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Footer/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SidebarAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Produto/Produto.js",["289","290","291"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FaCheck, FaShoppingCart } from \"react-icons/fa\";\n\nimport { Button, TextField } from \"@material-ui/core\";\nimport MetaData from \"../../meta/reactHelmet\";\n\nimport api from \"../../services/api\";\nimport { LoginContext } from \"../../contexts/LoginContext\";\nimport SnackbarMessage from \"../../components/SnackbarMessage\";\n\nimport \"./Produto.css\";\nimport \"./Radio.css\";\n\nimport ProductSkeleton from \"../../components/Skeletons/ProductSkeleton\";\n\nfunction validateFields(value, type) {\n  let isValid;\n  switch (type) {\n    case \"quantity\":\n      if (value === \"\" || Number(value) <= 0 || isNaN(Number(value))) {\n        isValid = false;\n      } else {\n        isValid = true;\n      }\n      break;\n    case \"size\":\n      if (value === 0) {\n        isValid = false;\n      } else {\n        isValid = true;\n      }\n      break;\n    default:\n      break;\n  }\n\n  return isValid;\n}\n\nconst obj_sizes = [\"PP\", \"P\", \"M\", \"G\", \"GG\"];\n\nfunction Produto() {\n  const { token } = useContext(LoginContext);\n\n  const [selectedValue, setSelectedValue] = useState(0);\n  const [Produto, setProduto] = useState({});\n\n  const [models, setModels] = useState([]);\n  const [modelChoosen, setModelChoosen] = useState({});\n  const [isSelect, setIsSelect] = useState(0);\n\n  const [errorCEP, setErrorCEP] = useState(false);\n  const [errorCEPMessage, setErrorCEPMessage] = useState(\"\");\n  const meta = {\n    titlePage: \"Uniformes Ecommerce | Produto\",\n    titleSearch: \"Profit Uniformes | Produto\",\n    description: \"Produtos personalizados prontos para a compra.\",\n    keyWords: \"Uniformes | Produto | Ecommerce | Profit\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n  };\n\n  const [errorSize, setErrorSize] = useState(false);\n\n  const [errorToken, setErrorToken] = useState(false);\n\n  const [errorQuantity, setErrorQuantity] = useState(false);\n  const [errorQuantityMessage, setErrorQuantityMessage] = useState(\"\");\n\n  const [calculatedShipping, setCalculatedShipping] = useState(null);\n\n  const [logoImage, setLogoImage] = useState(null);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [messageSnackbar, setMessageSnackbar] = useState(\"\");\n  const [typeSnackbar, setTypeSnackbar] = useState(\"success\");\n\n  const inputQuantity = useRef(null);\n  const inputSize = useRef(null);\n  const inputCEP = useRef(null);\n  const inputLogo = useRef(null);\n\n  //Pegando o id do produto pelo link\n  const { product_id } = useParams();\n\n  useEffect(async () => {\n    async function getProductModelsFromProduct(product_id) {\n      const response = await api.get(`/productmodels/${product_id}`);\n      return response.data;\n    }\n\n    const response = await getProductModelsFromProduct(product_id);\n    console.log(\"OPA\", response);\n    const arrayOfModels = response.models;\n    setProduto(response);\n\n    // Armazena o modela\n    setModels(arrayOfModels);\n\n    const choosen =\n      arrayOfModels[Math.floor(Math.random() * arrayOfModels.length)];\n\n    // Acha modelo principal\n    setModelChoosen(!choosen ? 1 : choosen);\n\n    // Acha modelo principal\n    setIsSelect(!choosen ? 1 : choosen.product_model_id);\n  }, []);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  //essa funcao tem um CSS só pra ela, pois gastou uns esquemas diferenciados pra fazer\n  function Radio(gender) {\n    function Content() {\n      return (\n        <div className=\"checked\">\n          <FaCheck color=\"white\" />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"radio\" style={{ display: \"flex\" }}>\n        {obj_sizes.map((size, index) => {\n          let value;\n          value = gender + \"_\" + size;\n          return (\n            <label\n              key={index}\n              htmlFor=\"radio_size_item\"\n              className=\"radio_container\"\n              onClick={() => setSelectedValue(value)}\n            >\n              {size}\n              <input\n                type=\"radio\"\n                name=\"radio_size_item\"\n                value={value}\n                ref={inputSize}\n              />\n              <span className=\"radio_checkmark\">\n                {selectedValue === value ? Content() : null}\n              </span>\n            </label>\n          );\n        })}\n      </div>\n    );\n  }\n\n  const AddToCart = async () => {\n    const resultQuantityField = validateFields(\n      inputQuantity.current.value,\n      \"quantity\"\n    );\n    const resultSizeField = validateFields(selectedValue, \"size\");\n\n    if (\n      !resultQuantityField ||\n      !resultSizeField ||\n      !token ||\n      token === \"notYet\"\n    ) {\n      if (!resultQuantityField) {\n        setErrorQuantity(true);\n        setErrorQuantityMessage(\"Quantidade inválida.\");\n      } else {\n        setErrorQuantity(false);\n        setErrorQuantityMessage(\"\");\n      }\n\n      if (!resultSizeField) {\n        setErrorSize(true);\n      } else {\n        setErrorSize(false);\n      }\n\n      if (!token || token === \"notYet\") {\n        setErrorToken(true);\n      } else {\n        setErrorToken(false);\n      }\n    } else {\n      setErrorQuantity(false);\n      setErrorQuantityMessage(\"\");\n      setErrorSize(false);\n      setErrorToken(false);\n\n      let objProdcutInCart = new FormData();\n      objProdcutInCart.append(\n        \"product_model_id\",\n        `${modelChoosen.product_model_id}`\n      );\n\n      const formattedGender = selectedValue.split(\"_\")[0] === \"Fem\" ? \"F\" : \"M\";\n\n      objProdcutInCart.append(\"gender\", formattedGender);\n      objProdcutInCart.append(\"size\", selectedValue.split(\"_\")[1]);\n      objProdcutInCart.append(\"amount\", Number(inputQuantity.current.value));\n      objProdcutInCart.append(\"file\", logoImage ? logoImage.imgSrc : null);\n      objProdcutInCart.append(\"isLogoUpload\", logoImage ? true : false);\n\n      try {\n        const response = await api.put(\"/addtocart\", objProdcutInCart, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"resposta\", response.data);\n\n        // Espera X milissegundos para ativar a função interna\n        setTimeout(() => {\n          setMessageSnackbar(\"Produto adicionado no carrinho!\");\n          setTypeSnackbar(\"success\");\n          setOpenSnackbar(true);\n        }, 800);\n      } catch (err) {\n        setMessageSnackbar(\"Falha ao adicionar o produto\");\n        setTypeSnackbar(\"error\");\n        console.warn(err);\n      }\n    }\n  };\n\n  async function CalculateCEP() {\n    const cepReceived = inputCEP.current.value;\n\n    try {\n      if (\n        cepReceived === \"\" ||\n        cepReceived.length < 8 ||\n        isNaN(Number(cepReceived))\n      ) {\n        setErrorCEP(true);\n        setErrorCEPMessage(\"Digite um CEP válido.\");\n      } else {\n        setErrorCEP(false);\n        setErrorCEPMessage(\"\");\n\n        const response = await api.get(`/shipping/${cepReceived}`);\n\n        setCalculatedShipping(response.data.shipping.Valor);\n      }\n    } catch (err) {\n      setCalculatedShipping(-1);\n      console.warn(err);\n    }\n  }\n\n  function AddLogo() {\n    inputLogo.current.click();\n  }\n\n  function handleAddLogoImage() {\n    let fileData = new FileReader();\n    fileData.readAsDataURL(inputLogo.current.files[0]);\n\n    fileData.onload = function () {\n      const fileLoaded = fileData.result;\n\n      setLogoImage({\n        file: fileLoaded,\n        imgSrc: inputLogo.current.files[0],\n        imgAlt: \"Logo\",\n      });\n    };\n  }\n\n  const handleSelectModel = (product_model_id) => {\n    const selectedModel = models.find(\n      (item) => item.product_model_id === product_model_id\n    );\n    console.log(\"escolhido\", selectedModel);\n    setModelChoosen(selectedModel);\n    setIsSelect(selectedModel.product_model_id);\n  };\n\n  return (\n    <div className=\"productPage\">\n      {models.length !== 0 ? (\n        <>\n          <MetaData\n            titlePage={meta.titlePage}\n            titleSearch={meta.titleSearch}\n            description={meta.description}\n            keyWords={meta.keyWords}\n            imageUrl={meta.imageUrl}\n            imageAlt={meta.imageAlt}\n          />\n          <div className=\"leftSide\">\n            <img\n              src={`${process.env.REACT_APP_BUCKET_AWS}${modelChoosen.img_link}`}\n              alt={`${modelChoosen.model_description}`}\n            />\n          </div>\n\n          <div className=\"rightSide\">\n            <h1 className=\"productsName\">{Produto.name}</h1>\n            <div className=\"titleArea\">\n              <strong>Descrição do produto:</strong>\n              <span>{Produto.description}</span>\n            </div>\n            <div className=\"productsInfo\">\n              <div className=\"leftSideInside\">\n                <div className=\"priceWIthPhotos\">\n                  <strong>\n                    {modelChoosen\n                      ? `R$ ${modelChoosen.price?.toFixed(2)}`\n                      : \"none\"}\n                  </strong>\n                  <div className=\"productsPhotos\">\n                    {models.length > 0 ? (\n                      models.map((item) => {\n                        return (\n                          <img\n                            src={`${process.env.REACT_APP_BUCKET_AWS}${item.img_link}`}\n                            alt={item.model_description}\n                            className={\n                              isSelect === item.product_model_id\n                                ? \"productSelect\"\n                                : null\n                            }\n                            onClick={() =>\n                              handleSelectModel(item.product_model_id)\n                            }\n                          />\n                        );\n                      })\n                    ) : (\n                      <span>Sem modelo</span>\n                    )}\n                  </div>\n                  <div className=\"logoSpaceDiv\">\n                    {logoImage && (\n                      <img\n                        className=\"logoImgClass\"\n                        src={logoImage.file}\n                        alt={logoImage.imgAlt}\n                      />\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"shipSpace\">\n                  <span>\n                    Calcule o CEP:{\" \"}\n                    {calculatedShipping && `R$ ${calculatedShipping}`}\n                  </span>\n                  <div className=\"calculateCEPArea\">\n                    <TextField\n                      variant=\"outlined\"\n                      type=\"text\"\n                      inputProps={{ maxLength: 8 }}\n                      inputRef={inputCEP}\n                      error={errorCEP}\n                      helperText={errorCEPMessage}\n                    />\n                    <Button\n                      className=\"calculateCEPButton\"\n                      onClick={CalculateCEP}\n                    >\n                      Calcular\n                    </Button>\n                  </div>\n\n                  <a\n                    href=\"https://buscacepinter.correios.com.br/app/endereco/index.php?t\"\n                    target=\"_blank\"\n                  >\n                    <span className=\"forgotPassword\">Não sei meu CEP</span>\n                  </a>\n                </div>\n              </div>\n              <div className=\"sizeAndQuantity\">\n                <strong>Tamanho</strong>\n                <div className=\"divCheckboxes\">\n                  <div className=\"genderCheckboxes\">\n                    <h6>Feminino</h6>\n                    {Radio(\"Fem\")}\n                  </div>\n                  <div className=\"genderCheckboxes\">\n                    <h6>Masculino</h6>\n                    {Radio(\"Mas\")}\n                  </div>\n                </div>\n\n                <div className=\"quantity\">\n                  <strong>Quantidade</strong>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"text\"\n                    inputProps={{ maxLength: 5 }}\n                    inputRef={inputQuantity}\n                    error={errorQuantity}\n                    helperText={errorQuantityMessage}\n                  />\n                </div>\n\n                <div className=\"loadLogo\">\n                  <div className=\"titleUploadLogo\">\n                    <strong>Logo da sua empresa</strong>\n                    <span>\n                      Envie a logo da sua empresa abaixo e veja como fica:\n                    </span>\n                  </div>\n\n                  <Button onClick={() => AddLogo()}>\n                    <input\n                      type=\"file\"\n                      hidden\n                      ref={inputLogo}\n                      onChange={(e) => handleAddLogoImage()}\n                    />\n                    Carregue a sua logo!\n                  </Button>\n                </div>\n                <Button className=\"addToCart\" onClick={() => AddToCart()}>\n                  <FaShoppingCart className=\"icon\" size=\"35px\" />\n                  ADICIONAR AO CARRINHO\n                </Button>\n\n                {errorSize && (\n                  <span style={{ color: \"#dc3545\", fontSize: \"0.9rem\" }}>\n                    Escolha um tamanho\n                  </span>\n                )}\n                {errorToken && (\n                  <span style={{ color: \"#dc3545\", fontSize: \"0.9rem\" }}>\n                    Necessário logar!\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          <SnackbarMessage\n            open={openSnackbar}\n            handleClose={handleClose}\n            message={messageSnackbar}\n            type={typeSnackbar}\n          />\n        </>\n      ) : (\n        <ProductSkeleton screenWidth={window.innerWidth} />\n      )}\n    </div>\n  );\n}\n\nexport default Produto;\n","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Loja/Loja.js",["292","293","294"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Contato/Contato.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/EspecificOrderAdm/EspecificOrderAdm.js",["295","296"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/EmployeeAdm.js",["297"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport api from \"../../../services/api\";\nimport { LoginContext } from \"../../../contexts/LoginContext\";\nimport { FaSearch } from \"react-icons/fa\";\nimport MetaData from \"../../../meta/reactHelmet\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport { BsInfoCircle, BsFillTrashFill } from \"react-icons/bs\";\nimport ExcludeDialog from \"../../../components/ExcludeDialog/ExcludeDialog\";\n\nimport \"./EmployeeAdm.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  actions: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n  },\n});\n\nfunction EmployeeAdm() {\n  const classes = useStyles();\n  const { token, user } = useContext(LoginContext);\n  const [employees, setEmployees] = useState([]);\n  const [funcionarioFiltrado, setFuncionarioFiltrado] = useState([]);\n  const [dialogItem, setDialogItem] = useState({ open: false, item: null });\n  const inputSearch = useRef(null);\n\n  const meta = {\n    titlePage: \"Administrador | Funcionário\",\n    titleSearch: \"Funcionário Profit Busca\",\n    description:\n      \"Encontre ou cadastre o funcionário que você desejar. É possível buscar, cadastrar ou deletar o funcionário do nosso banco de dados.\",\n    keyWords: \"Funcionário, Cadastro, Deletar, Profit\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n  };\n\n  function handleClose() {\n    setDialogItem({ open: false, item: null });\n  }\n\n  function handleOpen(item) {\n    setDialogItem({ open: true, item: item });\n  }\n\n  async function getEmployees() {\n    try {\n      const response = await api.get(\"/employees\", {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      console.log(response);\n      setEmployees([...response.data.employees]);\n      setFuncionarioFiltrado([...response.data.employees]);\n    } catch (error) {\n      console.warn(error);\n      alert(\"Erro ao buscar funcionários\");\n    }\n  }\n\n  async function deleteEmployee() {\n    try {\n      await api.delete(`/delAdmOrEmployee/${dialogItem.item.user_id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      handleClose();\n      getEmployees();\n    } catch (error) {\n      console.warn(error);\n      handleClose();\n      alert(\"Erro ao excluir funcionário\");\n    }\n  }\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n\n  function FilterEmployee() {\n    //Seta para vazio\n    setFuncionarioFiltrado([]);\n\n    const employee_name = inputSearch.current.value.toLowerCase();\n    employees.forEach((employee) => {\n      if (employee.name.toLowerCase().includes(employee_name)) {\n        //Adiciona funcionario filtrado ao array\n        setFuncionarioFiltrado((funcionarioFiltrado) => [\n          ...funcionarioFiltrado,\n          employee,\n        ]);\n        // funcionario.push(employee);\n        // setEmployees(funcionario);\n      }\n    });\n\n    // Se nao tiver nada no Input de busca, cooca todos\n    if (employee_name === \"\") {\n      setFuncionarioFiltrado([...employees]);\n    }\n  }\n\n  return (\n    <div>\n      <MetaData\n        titlePage={meta.titlePage}\n        titleSearch={meta.titleSearch}\n        description={meta.description}\n        keyWords={meta.keyWords}\n        imageUrl={meta.imageUrl}\n        imageAlt={meta.imageAlt}\n      />\n      <div className=\"topEmployee\">\n        <div className=\"searchEmployee\">\n          <input\n            id=\"searchEmployee\"\n            type=\"text\"\n            ref={inputSearch}\n            placeholder=\"Buscar Funcionário\"\n          />\n\n          <FaSearch onClick={FilterEmployee} className=\"searchButtonEmployee\" />\n        </div>\n        <div>\n          <Link className=\"buttonEmployee\" to=\"/adm/funcionarios/cadastro\">\n            <Button type=\"button\">CADASTRAR FUNCIONÁRIO</Button>\n          </Link>\n        </div>\n      </div>\n      <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" className=\"header-table\">\n                NOME COMPLETO\n              </TableCell>\n              <TableCell align=\"center\" className=\"header-table\">\n                EMAIL\n              </TableCell>\n              <TableCell align=\"center\" className=\"header-table\">\n                AÇÕES\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {funcionarioFiltrado.length > 0 ? (\n              funcionarioFiltrado.map((employee) => {\n                const id = employee.user_id;\n                const colum = (\n                  <TableRow key={employee.user_id}>\n                    <TableCell component=\"td\" scope=\"row\">\n                      {employee.name}\n                    </TableCell>\n                    <TableCell component=\"td\" scope=\"row\">\n                      {employee.email}\n                    </TableCell>\n                    <TableCell\n                      component=\"td\"\n                      scope=\"row\"\n                      className={classes.actions}\n                    >\n                      {id !== user[0].user_id ? (\n                        <IconButton onClick={() => handleOpen(employee)}>\n                          <BsFillTrashFill />\n                        </IconButton>\n                      ) : null}\n                      <IconButton>\n                        <Link to={`/adm/funcionario/` + id}>\n                          <BsInfoCircle />\n                        </Link>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n                return colum;\n              })\n            ) : (\n              <span>Nenhum funcionário cadastrado</span>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <ExcludeDialog\n        open={dialogItem.open}\n        handleClose={handleClose}\n        title={dialogItem.item?.name}\n        callback={deleteEmployee}\n      />\n    </div>\n  );\n}\n\nexport default EmployeeAdm;\n","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/HomeEditable/HomeEditable.js",["298","299","300","301","302"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/CadastroFunc/CadastroFunc.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/Mobile_HeaderAdm/MobileHeaderAdm.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/meta/reactHelmet.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/ProductSkeleton.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/DadosPessoais/DadosPessoais.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Carrinho/Components/CartProduct.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/CardPedido/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Components/DropDownLoginContent.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/CartHeaderSkeleton.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Enderecos/Enderecos.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpProductModel/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpProductModel/PopUpProductModel.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/App.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Contato/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/EditarPerfil/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Login/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/EspecificEmployee/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/FooterAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Home/Home.js",["303"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Perfil/Perfil.js",["304","305"],"import React, { useContext, useState, useEffect } from \"react\";\nimport CardPedido from \"../../components/CardPedido\";\nimport DadosPessoais from \"../../components/DadosPessoais/DadosPessoais\";\nimport Enderecos from \"../../components/Enderecos\";\nimport PopUpChangeAddress from \"../../components/PopUpChangeAddress\";\nimport MetaData from '../../meta/reactHelmet';\nimport api from '../../services/api';\nimport { LoginContext } from '../../contexts/LoginContext';\nimport { useHistory } from 'react-router-dom';\nimport ExcludeDialog from \"../../components/ExcludeDialog/ExcludeDialog\";\n\nimport \"./Perfil.css\";\n\nfunction Perfil() {\n\n  const { user, logOut, token } = useContext(LoginContext);\n  const currentUser = user[0];\n  const [userAddress, setUserAddress] = useState({});\n  const [userOrders, setUserOrders] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [dialogItem, setDialogItem] = useState({ open: false, item: null });\n  const history = useHistory();\n\n  const meta = {\n    titlePage: \"Uniformes Ecommerce | Perfil\",\n    titleSearch: \"Profit Uniformes | Perfil\",\n    description: \"Verifique seus dados pessoais e informações de envio juntamente com seus pedidos no perfil profit!\",\n    keyWords: \"Uniformes | Perfil | Ecommerce | Profit\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n  }\n\n  function handleClose() {\n    setDialogItem({ open: false, item: null });\n  }\n\n  function handleOpen(item) {\n    setDialogItem({ open: true, item: item });\n  }\n\n  async function deleteUser() {\n    try {\n      await api.delete(`/delUserClient/${currentUser.user_id}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      handleClose();\n      history.push(\"/\")\n      logOut();\n    } catch (error) {\n      console.warn(error);\n      handleClose();\n      alert(\"Erro ao excluir usuário\");\n    }\n  }\n\n  useEffect(() => {\n    try{\n      async function getAddress(){\n        const response = await api.get(`/address/${currentUser.user_id}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        },\n        );\n\n        console.log('aqi', response)\n        if(response.data.adresses.length > 0){\n          setUserAddress(response.data.adresses[0]);\n        }\n        console.log('resposta', response.data.adresses[0])\n      }\n\n\n      async function getOrders(){\n        const response = await api.get(`/userorder/${currentUser.user_id}`,\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        },\n        );\n        console.log('orders', response)\n        if(response.data){\n          setUserOrders(response.data);\n        }\n      }\n      getAddress();\n      getOrders();\n\n    }catch(err){\n      console.warn(err);\n    }\n  }, []);\n\n  // Chamado quando address atualiza (depois do popUp fechar)\n  useEffect(() => {\n\n    const newAddress = {\n      updatedFields : {\n        street: userAddress.street,\n        neighborhood: userAddress.neighborhood,\n        city: userAddress.city,\n        state: userAddress.state,\n        zip_code: userAddress.zip_code,\n        country: userAddress.country,\n        complement: userAddress.complement,\n      }\n    }\n\n    async function updateAddress(){\n      await api.put(`/address/${userAddress.address_id}`,\n      newAddress,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      },\n      );\n    }\n    // somente se existir endereço\n    if(userAddress.address_id){\n      updateAddress();\n    }\n\n  }, [userAddress]);\n\n  function handleCloseModal() {\n    setOpenModal(false);\n  }\n\n  function handleOpenModal() {\n    setOpenModal(true);\n  }\n\n  return (\n    <div className=\"profileContainer\">\n      <MetaData titlePage={meta.titlePage} titleSearch={meta.titleSearch} description={meta.description} keyWords={meta.keyWords} imageUrl={meta.imageUrl} imageAlt={meta.imageAlt} />\n      <div className=\"personalDataContainer\">\n        <h1 className=\"titleProfile\">\n          DADOS PESSOAIS\n          <span className=\"titleLine\"/>\n        </h1>\n        <div className=\"containerDados\">\n            <DadosPessoais dado={currentUser} />\n        </div>\n\n        <div className=\"containerEndereço\">\n          {\n            userAddress !== {} ?\n                <Enderecos endereço={userAddress} handleOpenModal={handleOpenModal}/>\n            : \n              null\n          }\n        </div>\n\n        <div>\n          <button\n            className=\"button-perfil\"\n            style={{ width: \"22vw\", marginTop: \"5vh\" }}\n            onClick={() => handleOpen(currentUser)}\n          >\n            Apagar conta\n          </button>\n        </div>\n      </div>\n\n      <div className=\"ordersContainer\">\n        <h1 className=\"titleProfile\">\n          MEUS PEDIDOS\n          <span className=\"titleLine\"/>\n        </h1>\n        <div className=\"containerPedidos\">\n          { \n            userOrders.length > 0 ?\n              userOrders.map((pedido, index) => (\n                <CardPedido key={index} pedido={pedido} token={token} />\n              ))\n            :\n            <span>Sem pedidos</span>\n          }\n        </div>\n      </div>\n      <PopUpChangeAddress\n        open={openModal}\n        handleClose={handleCloseModal}\n        setAddress={setUserAddress}\n        address={userAddress}\n      />\n      <ExcludeDialog\n        open={dialogItem.open}\n        handleClose={handleClose}\n        title={dialogItem.item?.name}\n        callback={deleteUser}\n      />\n    </div>\n  );\n}\n\nexport default Perfil;\n","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/EditarPerfil/EditarPerfil.js",["306","307","308","309","310","311"],"import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport MetaData from \"../../meta/reactHelmet\";\nimport { withRouter } from \"react-router-dom\";\nimport SnackbarMessage from \"../../components/SnackbarMessage\";\n\nimport {\n  Button,\n  CircularProgress,\n  makeStyles,\n  MenuItem,\n  Snackbar,\n  TextField,\n} from \"@material-ui/core\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nimport api from \"../../services/api\";\nimport { LoginContext } from \"../../contexts/LoginContext\";\n\nimport \"./EditarPerfil.css\";\nvar telefoneMostra;\n\nfunction validateInput(type, value) {\n  let isValid;\n  if (type === \"name\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"rua\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"numero\") {\n    if (isNaN(Number(value)) || value === \"\") {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  }\n\n  if (type === \"complemento\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"bairro\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"CEP\") {\n    if (value.length < 8 || value === \"\") {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  }\n\n  if (type === \"cidade\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"estado\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"pontoRef\") {\n    value === \"\" ? (isValid = false) : (isValid = true);\n  }\n\n  if (type === \"telefone\") {\n    if (value.length < 8 || value === \"\") {\n      isValid = false;\n    } else {\n      isValid = true;\n    }\n  }\n\n  return isValid;\n}\n\nfunction EditarPerfil({ history }) {\n  const { token, user, setUser } = useContext(LoginContext);\n\n  const classes = useStyles();\n\n  const [errorName, setErrorName] = useState(false);\n  const [errorNameMessage, setErrorNameMessage] = useState(\"\");\n\n  const [errorRua, setErrorRua] = useState(false);\n  const [errorRuaMessage, setErrorRuaMessage] = useState(\"\");\n\n  const [errorNum, setErrorNum] = useState(false);\n  const [errorNumMessage, setErrorNumMessage] = useState(\"\");\n\n  const [errorComplemento, setErrorComplemento] = useState(false);\n  const [errorComplementoMessage, setErrorComplementoMessage] = useState(\"\");\n\n  const [errorBairro, setErrorBairro] = useState(false);\n  const [errorBairroMessage, setErrorBairroMessage] = useState(\"\");\n\n  const [errorCEP, setErrorCEP] = useState(false);\n  const [errorCEPMessage, setErrorCEPMessage] = useState(\"\");\n\n  const [errorCidade, setErrorCidade] = useState(false);\n  const [errorCidadeMessage, setErrorCidadeMessage] = useState(\"\");\n\n  const [errorEstado, setErrorEstado] = useState(false);\n  const [errorEstadoMessage, setErrorEstadoMessage] = useState(\"\");\n\n  const [errorPontoRef, setErrorPontoRef] = useState(false);\n  const [errorPontoRefMessage, setErrorPontoRefMessage] = useState(\"\");\n\n  const [errorTelefone, setErrorTelefone] = useState(false);\n  const [errorTelefoneMessage, setErrorTelefoneMessage] = useState(\"\");\n\n  const [userInfo, setUserInfo] = useState({ name: user[0].name });\n  const [addressInfo, setAddressInfo] = useState();\n\n  const [messageSnackbar, setMessageSnackbar] = useState(\"\");\n  const [typeSnackbar, setTypeSnackbar] = useState(\"success\");\n\n  const nomeInput = useRef(null);\n  const ruaInput = useRef(null);\n  const numInput = useRef(null);\n  const complementoInput = useRef(null);\n  const bairroInput = useRef(null);\n  const CEPInput = useRef(null);\n  const cidadeInput = useRef(null);\n  const estadoInput = useRef(null);\n  const pontoRefInput = useRef(null);\n  const telefoneInput = useRef(null);\n\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const meta = {\n    titlePage: \"Uniformes E-commerce | Editar Perfil\",\n    titleSearch: \"Editar Perfil\",\n    description: \"Mude seus dados pessoais do seu perfil de usuário\",\n    keyWords: \"Editar perfil\",\n    imageUrl: \"\",\n    imageAlt: \"\",\n  };\n\n  useEffect(() => {\n    async function getUserAddress() {\n      const response = await api.get(\"/address\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setAddressInfo({ ...response.data.adresses[0] });\n      setUserInfo({ name: user[0].name });\n    }\n    getUserAddress();\n  }, []);\n\n\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleSubmit = async () => {\n    const resultValidateName = validateInput(\"name\", nomeInput.current.value);\n    const resultValidateRua = validateInput(\"rua\", ruaInput.current.value);\n    const resultValidateNum = validateInput(\"numero\", numInput.current.value);\n    const resultValidateComplemento = validateInput(\n      \"complemento\",\n      complementoInput.current.value\n    );\n    const resultValidateBairro = validateInput(\n      \"bairro\",\n      bairroInput.current.value\n    );\n    const resultValidateCEP = validateInput(\"CEP\", CEPInput.current.value);\n    const resultValidateCidade = validateInput(\n      \"cidade\",\n      cidadeInput.current.value\n    );\n    const resultValidateEstado = validateInput(\n      \"estado\",\n      estadoInput.current.value\n    );\n    const resultValidatePontoRef = validateInput(\n      \"pontoRef\",\n      pontoRefInput.current.value\n    );\n    const resultValidateTelefone = validateInput(\n      \"telefone\",\n      telefoneInput.current.value\n    );\n\n    if (\n      !resultValidateName ||\n      !resultValidateRua ||\n      !resultValidateNum ||\n      !resultValidateComplemento ||\n      !resultValidateBairro ||\n      !resultValidateCEP ||\n      !resultValidateCidade ||\n      !resultValidateEstado ||\n      !resultValidatePontoRef ||\n      !resultValidateTelefone\n    ) {\n      if (!resultValidateName) {\n        setErrorName(true);\n        setErrorNameMessage(\"Digite um nome.\");\n      } else {\n        setErrorName(false);\n        setErrorNameMessage(\"\");\n      }\n\n      if (!resultValidateRua) {\n        setErrorRua(true);\n        setErrorRuaMessage(\"Digite uma rua.\");\n      } else {\n        setErrorRua(false);\n        setErrorRuaMessage(\"\");\n      }\n\n      if (!resultValidateNum) {\n        setErrorNum(true);\n        setErrorNumMessage(\"Digite um número.\");\n      } else {\n        setErrorNum(false);\n        setErrorNumMessage(\"\");\n      }\n\n      if (!resultValidateComplemento) {\n        setErrorComplemento(true);\n        setErrorComplementoMessage(\"Digite um complemento.\");\n      } else {\n        setErrorComplemento(false);\n        setErrorComplementoMessage(\"\");\n      }\n\n      if (!resultValidateBairro) {\n        setErrorBairro(true);\n        setErrorBairroMessage(\"Digite um bairro\");\n      } else {\n        setErrorBairro(false);\n        setErrorBairroMessage(\"\");\n      }\n\n      if (!resultValidateCEP) {\n        setErrorCEP(true);\n        setErrorCEPMessage(\"CEP inválido.\");\n      } else {\n        setErrorCEP(false);\n        setErrorCEPMessage(\"\");\n      }\n\n      if (!resultValidateCidade) {\n        setErrorCidade(true);\n        setErrorCidadeMessage(\"Digite uma cidade.\");\n      } else {\n        setErrorCidade(false);\n        setErrorCidadeMessage(\"\");\n      }\n\n      if (!resultValidateEstado) {\n        setErrorEstado(true);\n        setErrorEstadoMessage(\"Selecione um estado.\");\n      } else {\n        setErrorEstado(false);\n        setErrorEstadoMessage(\"\");\n      }\n\n      if (!resultValidatePontoRef) {\n        setErrorPontoRef(true);\n        setErrorPontoRefMessage(\"Digite um ponto de referência.\");\n      } else {\n        setErrorPontoRef(false);\n        setErrorPontoRefMessage(\"\");\n      }\n\n      if (!resultValidateTelefone) {\n        setErrorTelefone(true);\n        setErrorTelefoneMessage(\"Insira um telefone válido.\");\n      } else {\n        setErrorTelefone(false);\n        setErrorTelefoneMessage(\"\");\n      }\n    } else {\n      setErrorName(false);\n      setErrorNameMessage(\"\");\n      setErrorRua(false);\n      setErrorRuaMessage(\"\");\n      setErrorNum(false);\n      setErrorNumMessage(\"\");\n      setErrorComplemento(false);\n      setErrorComplementoMessage(\"\");\n      setErrorBairro(false);\n      setErrorBairroMessage(\"\");\n      setErrorCEP(false);\n      setErrorCEPMessage(\"\");\n      setErrorCidade(false);\n      setErrorCidadeMessage(\"\");\n      setErrorEstado(false);\n      setErrorEstadoMessage(\"\");\n      setErrorPontoRef(false);\n      setErrorPontoRefMessage(\"\");\n      setErrorTelefone(false);\n      setErrorTelefoneMessage(\"\");\n\n      // setAddressInfo({ ...addressInfo, street: street });\n\n      try {\n        setLoading(true);\n        const street = ruaInput.current.value + \",\" + numInput.current.value;\n        const response = await api.put(\n          `/address/${addressInfo.address_id}`,\n          {\n            updatedFields: {\n              street: street,\n              neighborhood: bairroInput.current.value,\n              city: cidadeInput.current.value,\n              state: estadoInput.current.value,\n              zip_code: CEPInput.current.value,\n              country: addressInfo.country,\n              complement: complementoInput.current.value,\n            },\n          },\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n        console.log(response);\n        setUser([\n          {\n            ...user[0],\n            name: nomeInput.current.value,\n            telefone: telefoneInput.current.value,\n          },\n        ]);\n        const responseUser = await api.put(\n          `user/${user[0].user_id}`,\n          {\n            updatedFields: {\n              name: nomeInput.current.value,\n              email: user[0].email,\n              telefone: telefoneInput.current.value,\n              cpf: user[0].cpf,\n            },\n          },\n          {\n            headers: { Authorization: `Bearer ${token}` },\n          }\n        );\n\n        setTimeout(() => {\n          setLoading(false);\n          setMessageSnackbar(\"Alterações realizadas com sucesso!\");\n          setTypeSnackbar(\"success\");\n          setOpen(true);\n        }, 1000);\n      } catch (err) {\n        setMessageSnackbar(\"Falha ao atualizar os dados\");\n        setTypeSnackbar(\"error\");\n        setLoading(false);\n        console.log(err.message);\n      }\n    }\n  };\n\n  const handleInputChange = (e, type) => {\n    let newUserInfo;\n    let newAddressInfo;\n\n    if (type === \"name\") {\n      newUserInfo = {\n        name: e.target.value,\n      };\n      setUserInfo({ ...newUserInfo });\n    }\n\n    if (type === \"rua\") {\n      newAddressInfo = {\n        rua: e.target.value,\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"number\") {\n      newAddressInfo = {\n        number: e.target.value,\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"city\") {\n      newAddressInfo = {\n        city: e.target.value,\n        country: \"Brasil\",\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"neighborhood\") {\n      newAddressInfo = {\n        neighborhood: e.target.value,\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"zip_code\") {\n      newAddressInfo = {\n        zip_code: e.target.value,\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"complement\") {\n      newAddressInfo = {\n        complement: e.target.value,\n      };\n      setAddressInfo({ ...addressInfo, ...newAddressInfo });\n    }\n\n    if (type === \"state\") {\n      newAddressInfo = {\n        state: e.target.value,\n      };\n      console.log(newAddressInfo.state);\n      setAddressInfo({ ...addressInfo, state: e.target.value });\n    }\n  };\n\n  const estados = [\n    \"AC\",\n    \"AL\",\n    \"AP\",\n    \"AM\",\n    \"BA\",\n    \"CE\",\n    \"DF\",\n    \"ES\",\n    \"GO\",\n    \"MA\",\n    \"MG\",\n    \"MS\",\n    \"MT\",\n    \"PA\",\n    \"PB\",\n    \"PR\",\n    \"PE\",\n    \"PI\",\n    \"RJ\",\n    \"RN\",\n    \"RO\",\n    \"RS\",\n    \"RR\",\n    \"SC\",\n    \"SP\",\n    \"SE\",\n    \"TO\",\n  ];\n\n  return (\n    <div className=\"registerEmployeeFullContent\">\n      <MetaData\n        titlePage={meta.titlePage}\n        titleSearch={meta.titleSearch}\n        description={meta.description}\n        keyWords={meta.keyWords}\n        imageUrl={meta.imageUrl}\n        imageAlt={meta.imageAlt}\n      />\n      <h1 className={classes.mainTitle}>\n        EDITAR DADOS PESSOAIS\n        <span className={classes.spanInsideTitle} />\n      </h1>\n\n      <h1 className={classes.subTitle}>NOME COMPLETO</h1>\n      {user[0].name && (\n        <TextField\n          required\n          inputRef={nomeInput}\n          error={errorName}\n          label=\"Nome Completo\"\n          helperText={errorNameMessage}\n          className={classes.largeInput}\n          variant=\"outlined\"\n          defaultValue={user[0].name}\n          onChange={(e) => handleInputChange(e, \"name\")}\n        />\n      )}\n\n      <h1 className={classes.subTitle}>ENDEREÇO</h1>\n      <div className=\"horizontalInput\">\n        <h1 className={classes.caption}>Rua</h1>\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Rua\"\n            inputRef={ruaInput}\n            error={errorRua}\n            helperText={errorRuaMessage}\n            className={classes.mediumInput}\n            variant=\"outlined\"\n            defaultValue={addressInfo.street.split(\",\")[0]}\n            onChange={(e) => handleInputChange(e, \"rua\")}\n          />\n        )}\n        <h1 className={classes.caption}>N°</h1>\n\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Número\"\n            inputRef={numInput}\n            error={errorNum}\n            helperText={errorNumMessage}\n            className={classes.smallInput}\n            defaultValue={addressInfo.street.split(\",\")[1]}\n            variant=\"outlined\"\n            onChange={(e) => handleInputChange(e, \"number\")}\n          />\n        )}\n        <h1 className={classes.caption}>Complemento</h1>\n\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Complemento\"\n            inputRef={complementoInput}\n            error={errorComplemento}\n            helperText={errorComplementoMessage}\n            className={classes.mediumInput}\n            variant=\"outlined\"\n            defaultValue={addressInfo.complement}\n            onChange={(e) => handleInputChange(e, \"complement\")}\n          />\n        )}\n        <h1 className={classes.caption}>Bairro</h1>\n\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Bairro\"\n            inputRef={bairroInput}\n            error={errorBairro}\n            helperText={errorBairroMessage}\n            className={classes.mediumInput}\n            variant=\"outlined\"\n            defaultValue={addressInfo.neighborhood}\n            onChange={(e) => handleInputChange(e, \"neighborhood\")}\n          />\n        )}\n      </div>\n\n      <div className=\"horizontalInput\">\n        <h1 className={classes.caption}>CEP</h1>\n        {addressInfo && (\n          <TextField\n            required\n            label=\"CEP\"\n            inputRef={CEPInput}\n            error={errorCEP}\n            helperText={errorCEPMessage}\n            variant=\"outlined\"\n            className={classes.mediumInput}\n            defaultValue={addressInfo.zip_code}\n            onChange={(e) => handleInputChange(e, \"zip_code\")}\n          />\n        )}\n        <h1 className={classes.caption}>Cidade</h1>\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Cidade\"\n            inputRef={cidadeInput}\n            error={errorCidade}\n            helperText={errorCidadeMessage}\n            className={classes.mediumInput}\n            variant=\"outlined\"\n            defaultValue={addressInfo.city}\n            onChange={(e) => handleInputChange(e, \"city\")}\n          />\n        )}\n        <h1 className={classes.caption}>Estado</h1>\n        {addressInfo && (\n          <TextField\n            required\n            select\n            label=\"Estado\"\n            error={errorEstado}\n            inputRef={estadoInput}\n            helperText={errorEstadoMessage}\n            className={classes.smallInput}\n            defaultValue={addressInfo.state}\n            onChange={(e) => handleInputChange(e, \"state\")}\n            variant=\"outlined\"\n          >\n            {estados.map((estado) => (\n              <MenuItem value={estado}>{estado}</MenuItem>\n            ))}\n          </TextField>\n        )}\n      </div>\n\n      <div className=\"horizontalInput\">\n        <h1 className={classes.caption}>Ponto de referência</h1>\n        {addressInfo && (\n          <TextField\n            required\n            label=\"Ponto de Referência\"\n            inputRef={pontoRefInput}\n            error={errorPontoRef}\n            helperText={errorPontoRefMessage}\n            className={classes.mediumInput}\n            variant=\"outlined\"\n            defaultValue={addressInfo.complement}\n            // onChange={(e) => handleInputChange(e, 'complement')}\n          />\n        )}\n      </div>\n\n      <h1 className={classes.subTitle}>TELEFONE DE CONTATO</h1>\n      <TextField\n        required\n        label=\"Telefone\"\n        onInput={(e) => {\n          e.target.value = Math.max(0, parseInt(e.target.value))\n            .toString()\n            .slice(0, 11);\n        }}\n        inputRef={telefoneInput}\n        error={errorTelefone}\n        helperText={errorTelefoneMessage}\n        className={classes.mediumInput}\n        variant=\"outlined\"\n        defaultValue={user[0].telefone}\n      />\n\n      <div className={classes.divButtons}>\n        <Button className={classes.saveButton} onClick={() => handleSubmit()}>\n          {loading ? (\n            <CircularProgress color=\"secondary\" />\n          ) : (\n            \"SALVAR ALTERAÇÕES\"\n          )}\n        </Button>\n      </div>\n      <SnackbarMessage open={open} handleClose={handleClose} message={messageSnackbar} type={typeSnackbar}/>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  mainTitle: {\n    width: \"fit-content\",\n    fontSize: \"32px\",\n    lineHeight: \"49px\",\n    marginTop: \"5px\",\n    marginBottom: \"30px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n\n  spanInsideTitle: {\n    width: \"90%\",\n    height: \"2px\",\n    margin: \"0 auto\",\n    borderBottom: \"2px solid #0EC4AB\",\n  },\n\n  subTitle: {\n    width: \"fit-content\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    marginTop: \"20px\",\n    marginBottom: \"8px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    color: \"#0EC4AB\",\n  },\n\n  caption: {\n    width: \"fit-content\",\n    fontSize: \"20px\",\n    lineHeight: \"25px\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    marginRight: \"5px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n\n  inputText: {\n    width: \"35%\",\n    outline: \"none\",\n    padding: \"5px 10px\",\n    \"&:focus\": {\n      width: \"70%\",\n    },\n    borderRadius: \"7px\",\n    \"& + &\": {\n      marginTop: \"16px\",\n    },\n    \"& > label\": {\n      paddingLeft: \"14px\",\n    },\n  },\n\n  smallInput: {\n    width: \"50%\",\n    [theme.breakpoints.up(\"800\")]: {\n      width: \"10%\",\n    },\n    outline: \"none\",\n    padding: \"5px 10px\",\n    [`& fieldset`]: {\n      borderRadius: 40,\n      borderColor: \"#0EC4AB\",\n      borderWidth: 2,\n    },\n  },\n\n  mediumInput: {\n    width: \"100%\",\n    [theme.breakpoints.up(\"800\")]: {\n      width: \"20%\",\n    },\n    outline: \"none\",\n    padding: \"5px 10px\",\n    [`& fieldset`]: {\n      borderRadius: 40,\n      borderColor: \"#0EC4AB\",\n      borderWidth: 2,\n    },\n  },\n\n  largeInput: {\n    width: \"100%\",\n    [theme.breakpoints.up(\"800\")]: {\n      width: \"30%\",\n    },\n    outline: \"none\",\n    padding: \"5px 10px\",\n    [`& fieldset`]: {\n      borderRadius: 40,\n      borderColor: \"#0EC4AB\",\n      borderWidth: 2,\n    },\n  },\n\n  divButtons: {\n    width: \"100%\",\n    marginTop: \"30px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  saveButton: {\n    width: \"80%\",\n    [theme.breakpoints.up(\"800\")]: {\n      width: \"35%\",\n    },\n    outline: \"none\",\n    backgroundColor: \"#0EC4AB\",\n    fontSize: \"20px\",\n    transition: \"background 0.6s\",\n\n    borderRadius: \"40px\",\n    \"&:hover\": {\n      backgroundColor: \"#0EC4ABAA\",\n    },\n  },\n}));\n\nexport default withRouter(EditarPerfil);\n","/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/RegisterProduct/RegisterProduct.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SidebarAdm/SidebarAdm.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Computer_Header/Header.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/MobileShopSkeleton.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpChangeAddress/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/SnackbarMessage/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Enderecos/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/PopUpChangeAddress/PopUpChangeAddress.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/TabelaFuncionario/TabelaFuncionario.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCardAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCardAdm/ProductCardAdm.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Skeletons/ShopSkeleton.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCard/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Home/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Produto/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Error/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/ProductsAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/EmployeeAdm/index.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Carrinho/Carrinho.js",["312"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Cadastro/Cadastro.js",["313","314","315","316"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/Pages/Administrador/OrdersAdm/OrdersAdm.js",["317","318"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/HeaderAdm/Computer_HeaderAdm/HeaderAdm.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ExcludeDialog/ExcludeDialog.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Header/Components/DropDownCartContent.js",["319"],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/OrderTable/OrderTable.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/Toggle/Toggle.js",[],"/home/bryan/Desktop/Uniform/frontend-uniformsystem/src/components/ProductCard/ProductCard.js",[],{"ruleId":"320","severity":1,"message":"321","line":57,"column":7,"nodeType":"322","messageId":"323","endLine":57,"endColumn":25},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"324","replacedBy":"328"},{"ruleId":"326","replacedBy":"329"},{"ruleId":"330","severity":1,"message":"331","line":87,"column":13,"nodeType":"332","endLine":109,"endColumn":4},{"ruleId":"330","severity":1,"message":"333","line":109,"column":6,"nodeType":"334","endLine":109,"endColumn":8,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":372,"column":21,"nodeType":"338","endLine":372,"endColumn":36},{"ruleId":"320","severity":1,"message":"339","line":6,"column":10,"nodeType":"322","messageId":"323","endLine":6,"endColumn":16},{"ruleId":"320","severity":1,"message":"340","line":8,"column":30,"nodeType":"322","messageId":"323","endLine":8,"endColumn":44},{"ruleId":"330","severity":1,"message":"341","line":100,"column":6,"nodeType":"334","endLine":100,"endColumn":14,"suggestions":"342"},{"ruleId":"330","severity":1,"message":"343","line":79,"column":6,"nodeType":"334","endLine":79,"endColumn":8,"suggestions":"344"},{"ruleId":"345","severity":1,"message":"346","line":269,"column":21,"nodeType":"347","endLine":269,"endColumn":67},{"ruleId":"330","severity":1,"message":"348","line":93,"column":6,"nodeType":"334","endLine":93,"endColumn":8,"suggestions":"349"},{"ruleId":"330","severity":1,"message":"350","line":234,"column":9,"nodeType":"351","endLine":240,"endColumn":4},{"ruleId":"330","severity":1,"message":"352","line":234,"column":9,"nodeType":"351","endLine":240,"endColumn":4},{"ruleId":"330","severity":1,"message":"353","line":255,"column":9,"nodeType":"351","endLine":259,"endColumn":4},{"ruleId":"330","severity":1,"message":"354","line":317,"column":6,"nodeType":"334","endLine":317,"endColumn":8,"suggestions":"355"},{"ruleId":"330","severity":1,"message":"356","line":378,"column":6,"nodeType":"334","endLine":378,"endColumn":8,"suggestions":"357"},{"ruleId":"330","severity":1,"message":"358","line":129,"column":6,"nodeType":"334","endLine":129,"endColumn":8,"suggestions":"359"},{"ruleId":"330","severity":1,"message":"360","line":90,"column":6,"nodeType":"334","endLine":90,"endColumn":8,"suggestions":"361"},{"ruleId":"330","severity":1,"message":"354","line":120,"column":6,"nodeType":"334","endLine":120,"endColumn":19,"suggestions":"362"},{"ruleId":"320","severity":1,"message":"363","line":11,"column":3,"nodeType":"322","messageId":"323","endLine":11,"endColumn":11},{"ruleId":"320","severity":1,"message":"364","line":14,"column":8,"nodeType":"322","messageId":"323","endLine":14,"endColumn":16},{"ruleId":"320","severity":1,"message":"365","line":20,"column":5,"nodeType":"322","messageId":"323","endLine":20,"endColumn":19},{"ruleId":"320","severity":1,"message":"366","line":114,"column":10,"nodeType":"322","messageId":"323","endLine":114,"endColumn":18},{"ruleId":"330","severity":1,"message":"367","line":154,"column":6,"nodeType":"334","endLine":154,"endColumn":8,"suggestions":"368"},{"ruleId":"320","severity":1,"message":"369","line":338,"column":15,"nodeType":"322","messageId":"323","endLine":338,"endColumn":27},{"ruleId":"330","severity":1,"message":"341","line":87,"column":6,"nodeType":"334","endLine":87,"endColumn":8,"suggestions":"370"},{"ruleId":"320","severity":1,"message":"363","line":10,"column":3,"nodeType":"322","messageId":"323","endLine":10,"endColumn":11},{"ruleId":"320","severity":1,"message":"364","line":13,"column":8,"nodeType":"322","messageId":"323","endLine":13,"endColumn":16},{"ruleId":"320","severity":1,"message":"371","line":171,"column":5,"nodeType":"322","messageId":"323","endLine":171,"endColumn":10},{"ruleId":"330","severity":1,"message":"372","line":171,"column":13,"nodeType":"373","endLine":171,"endColumn":17},{"ruleId":"330","severity":1,"message":"374","line":60,"column":6,"nodeType":"334","endLine":60,"endColumn":19,"suggestions":"375"},{"ruleId":"330","severity":1,"message":"376","line":69,"column":6,"nodeType":"334","endLine":69,"endColumn":19,"suggestions":"377"},{"ruleId":"330","severity":1,"message":"341","line":41,"column":6,"nodeType":"334","endLine":41,"endColumn":8,"suggestions":"378"},"no-unused-vars","'PrivateClientRoute' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["379"],"no-negated-in-lhs",["380"],["379"],["380"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'product_id'. Either include it or remove the dependency array.","ArrayExpression",["381"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Helmet' is defined but never used.","'FaTruckLoading' is defined but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["382"],"React Hook useEffect has missing dependencies: 'obterModelos' and 'obterPedidos'. Either include them or remove the dependency array.",["383"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["384"],"The 'arrayImages' array makes the dependencies of useEffect Hook (at line 408) change on every render. To fix this, wrap the initialization of 'arrayImages' in its own useMemo() Hook.","VariableDeclarator","The 'arrayImages' array makes the dependencies of useEffect Hook (at line 453) change on every render. To fix this, wrap the initialization of 'arrayImages' in its own useMemo() Hook.","The 'arrayImagesProducts' array makes the dependencies of useEffect Hook (at line 489) change on every render. To fix this, wrap the initialization of 'arrayImagesProducts' in its own useMemo() Hook.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["385"],"React Hook useEffect has missing dependencies: 'bucketAWS' and 'token'. Either include them or remove the dependency array.",["386"],"React Hook useEffect has a missing dependency: 'bucketAWS'. Either include it or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'currentUser.user_id' and 'token'. Either include them or remove the dependency array.",["388"],["389"],"'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.","'telefoneMostra' is defined but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'token' and 'user'. Either include them or remove the dependency array.",["390"],"'responseUser' is assigned a value but never used.",["391"],"'flag1' is assigned a value but never used.","Assignments to the 'flag1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useCallback has missing dependencies: 'Orders' and 'token'. Either include them or remove the dependency array.",["392"],"React Hook useEffect has a missing dependency: 'obterPedidos'. Either include it or remove the dependency array.",["393"],["394"],"no-global-assign","no-unsafe-negation",{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"415","fix":"421"},"Update the dependencies array to be: [product_id]",{"range":"422","text":"423"},"Update the dependencies array to be: [filter, getProducts]",{"range":"424","text":"425"},"Update the dependencies array to be: [obterModelos, obterPedidos]",{"range":"426","text":"427"},"Update the dependencies array to be: [getEmployees]",{"range":"428","text":"429"},"Update the dependencies array to be: [token]",{"range":"430","text":"431"},"Update the dependencies array to be: [bucketAWS, token]",{"range":"432","text":"433"},"Update the dependencies array to be: [bucketAWS]",{"range":"434","text":"435"},"Update the dependencies array to be: [currentUser.user_id, token]",{"range":"436","text":"437"},"Update the dependencies array to be: [token, userAddress]",{"range":"438","text":"439"},"Update the dependencies array to be: [token, user]",{"range":"440","text":"441"},"Update the dependencies array to be: [getProducts]",{"range":"442","text":"443"},"Update the dependencies array to be: [Orders, onlyPending, token]",{"range":"444","text":"445"},"Update the dependencies array to be: [obterPedidos, onlyPending]",{"range":"446","text":"447"},{"range":"448","text":"443"},[3203,3205],"[product_id]",[2899,2907],"[filter, getProducts]",[2386,2388],"[obterModelos, obterPedidos]",[2462,2464],"[getEmployees]",[9801,9803],"[token]",[11577,11579],"[bucketAWS, token]",[3854,3856],"[bucketAWS]",[2691,2693],"[currentUser.user_id, token]",[3417,3430],"[token, userAddress]",[4324,4326],"[token, user]",[2312,2314],"[getProducts]",[1689,1702],"[Orders, onlyPending, token]",[1830,1843],"[obterPedidos, onlyPending]",[1156,1158]]